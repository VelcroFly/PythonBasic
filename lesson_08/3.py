import re

"""Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться."""


class NotNumberException(Exception):

    def __init__(self, error_text):
        self.error_text = error_text


res_list = list()
decimal_pattern = re.compile(r'^[^a-z]\d+[\.\,]\d+$')
int_pattern = re.compile(r'^[^a-z]\d+$')

while True:
    new_element = input('Введите элемент списка для добавления / "q" - чтобы завершить ввод: ')

    if new_element == 'q':
        print('Завершение работы')
        break

    try:
        if not (decimal_pattern.match(new_element) or int_pattern.match(new_element)):
            raise NotNumberException('Попытка добавить в список элемент, не являющийся числом')
    except NotNumberException:
        print('Попытка добавить в список элемент, не являющийся числом')
    else:
        res_list.append(new_element)

    if res_list:
        print(res_list)
